openapi: 3.0.0
info:
  title: Jobs API
  description: ''
  contact: {}
  version: '1.0'
servers:
- url: https://temp-jobs-api-48m6.onrender.com/api/v1
  variables: {}
paths:
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    delete:
      tags:
      - Jobs
      summary: Delete Job
      description: ''
      operationId: DeleteJob
      parameters:
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: insomnia/8.4.1
      - name: Authorization
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: Bearer {% response 'body', 'req_fd63a56ec4124966899da78cd802a11c', 'b64::JC50b2tlbg==::46b', 'never', 60 %}
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
    patch:
      tags:
      - Jobs
      summary: Update Job
      description: ''
      operationId: UpdateJob
      parameters:
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: insomnia/8.4.1
      - name: Authorization
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: Bearer {% response 'body', 'req_fd63a56ec4124966899da78cd802a11c', 'b64::JC50b2tlbg==::46b', 'never', 60 %}
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateJobRequest'
              - example:
                  company: Sam's Place
                  position: intern
            example:
              company: Sam's Place
              position: intern
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
      - Jobs
      summary: Get Single Job
      description: ''
      operationId: GetSingleJob
      parameters:
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: insomnia/8.4.1
      - name: Authorization
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: Bearer {% response 'body', 'req_fd63a56ec4124966899da78cd802a11c', 'b64::JC50b2tlbg==::46b', 'never', 60 %}
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
  /jobs:
    get:
      tags:
      - Jobs
      summary: Get All Jobs
      description: ''
      operationId: GetAllJobs
      parameters:
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: insomnia/8.4.0
      - name: Authorization
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: Bearer {% response 'body', 'req_fd63a56ec4124966899da78cd802a11c', 'b64::JC50b2tlbg==::46b', 'never', 60 %}
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
    post:
      tags:
      - Jobs
      summary: Create Job
      description: ''
      operationId: CreateJob
      parameters:
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: insomnia/8.4.0
      - name: Authorization
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: Bearer {% response 'body', 'req_fd63a56ec4124966899da78cd802a11c', 'b64::JC50b2tlbg==::46b', 'never', 60 %}
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobRequest'
              - example:
                  company: Sam's Place
                  position: associate
            example:
              company: Sam's Place
              position: associate
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login User
      description: ''
      operationId: LoginUser
      parameters:
      - name: token
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: insomnia/8.4.0
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginUserRequest'
              - example:
                  email: anna@gmail.com
                  password: secret
            example:
              email: anna@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register User
      description: ''
      operationId: RegisterUser
      parameters:
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: insomnia/8.3.0
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterUserRequest'
              - example:
                  name: sam
            example:
              name: sam
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema: {}
      deprecated: false
      security: []
components:
  schemas:
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Sam's Place
        position: intern
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Sam's Place
        position: associate
    LoginUserRequest:
      title: LoginUserRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: anna@gmail.com
        password: secret
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
      - name
      type: object
      properties:
        name:
          type: string
      example:
        name: sam
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: Jobs
  description: ''
- name: Auth
  description: ''